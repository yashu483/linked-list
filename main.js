(()=>{"use strict";class t{constructor(t=null){this.value=t,this.next=null}}class n{constructor(){this.head=null,this.tail=null}append(n){const e=new t(n);null===this.head?(this.head=e,this.tail=e):(this.tail.next=e,this.tail=e)}prepend(n){const e=new t(n);null===this.head?(this.head=e,this.tail=e):(e.next=this.head,this.head=e)}get size(){let t=0;return function n(e){return t+=1,null===e.next?t:n(e.next)}(this.head)}at(t){return function t(n,e){return 0===e?n:null===n.next&&e>0?"Error: Out of range Index.":t(n.next,e-1)}(this.head,t)}pop(){this.tail=function t(n){return null===n.next.next?(n.next=null,n):t(n.next)}(this.head)}contains(t){return function n(e){return(null!==e.next||e.value===t)&&(e.value===t||n(e.next))}(this.head)}find(t){let n=0;return function e(l){return null===l.next&&l.value!==t?null:l.value===t?n:(n+=1,e(l.next))}(this.head)}toString(){let t="";return function n(e){return null===e.next?t+`(${e.value}) -> (${e.next})`:(t+=`(${e.value}) -> `,n(e.next))}(this.head)}insertAt(n,e){const l=new t(n);if(0===e)return void(null===this.head?(this.head=l,this.tail=l):(l.next=this.head,this.head=l));let i=e;!function t(n,e){e>1&&null===n.next||e<0?console.log("Out of range index."):1!==e||null!==n.next?1===e?(l.next=n.next,n.next=l):t(n.next,e-1):n.next=l}(this.head,i),null!==this.tail.next&&(this.tail=this.tail.next)}removeAt(t){if(0===t)return null===this.head?void 0:void(this.head=this.head.next);!function t(n,e){1===e&&null===n.next||e<0||e>1&&null===n.next?console.log("Out of range index."):1!==e?t(n.next,e-1):n.next=n.next.next}(this.head,t)}}window.LinkedList=n;const e=new n;e.append("dog"),e.append("cat"),e.append("parrot"),e.append("hamster"),e.append("snake"),e.append("turtle"),console.log(e.toString())})();
//# sourceMappingURL=main.js.map